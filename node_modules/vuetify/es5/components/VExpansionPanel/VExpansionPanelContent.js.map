{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"names":[],"mappings":";;;;;;;AAEA;;AAGA;;AACA;;AAGA;;AACA;;;;AANA;AAIA;AAOA,IAAM,UAAU,GAAG,qBACjB,iBADiB,EAEjB,yBAAyD,gBAAzD,EAA2E,2BAA3E,EAAwG,mBAAxG,CAFiB,CAAnB;AASA;;eACe,UAAU,CAAC,MAAX,GAA6B,MAA7B,CAAoC;AACjD,EAAA,IAAI,EAAE,2BAD2C;AAGjD,EAAA,QAAQ,EAAE;AACR,IAAA,QADQ,sBACA;AACN,aAAO,KAAK,cAAL,CAAoB,QAA3B;AACD;AAHO,GAHuC;AASjD,EAAA,OATiD,qBAS1C;AACL,SAAK,cAAL,CAAoB,eAApB,CAAoC,IAApC;AACD,GAXgD;AAajD,EAAA,aAbiD,2BAapC;AACX,SAAK,cAAL,CAAoB,iBAApB;AACD,GAfgD;AAiBjD,EAAA,MAjBiD,kBAiBzC,CAjByC,EAiBxC;AACP,WAAO,CAAC,CAAC,8BAAD,EAAoB,CAC1B,CAAC,CAAC,KAAD,EAAQ;AACP,MAAA,WAAW,EAAE,2BADN;AAEP,MAAA,UAAU,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,MADK;AAEX,QAAA,KAAK,EAAE,KAAK;AAFD,OAAD;AAFL,KAAR,EAME,KAAK,eAAL,CAAqB,CACtB,CAAC,CAAC,KAAD,EAAQ;AAAE,MAAA,KAAK,EAAE;AAAT,KAAR,EAAsD,sBAAQ,IAAR,CAAtD,CADqB,CAArB,CANF,CADyB,CAApB,CAAR;AAWD;AA7BgD,CAApC,C","sourcesContent":["// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ])),\n    ])\n  },\n})\n"],"sourceRoot":"","file":"VExpansionPanelContent.js"}